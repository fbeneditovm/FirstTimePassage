/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package ufma.pe.gui;

import javax.swing.JOptionPane;
import javax.swing.table.TableModel;
import java.math.BigDecimal;
import java.math.MathContext;
import java.util.Arrays;
import javax.swing.table.DefaultTableModel;
import ufma.pe.firstpassagetime.FirstTimePassage;

/**
 *
 * @author fbeneditovm
 */
public class MainScreen extends javax.swing.JFrame {

    int nStates;
    int function;
    String[] columnNames;

    /**
     * Creates new form MainScreen
     */
    public MainScreen() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane3 = new javax.swing.JScrollPane();
        jTableEquations = new javax.swing.JTable();
        jSpinnerNStates = new javax.swing.JSpinner();
        jScrollPane4 = new javax.swing.JScrollPane();
        jTableResult = new javax.swing.JTable();
        jLabelTMatrix = new javax.swing.JLabel();
        jLabelResult = new javax.swing.JLabel();
        jLabelNStates = new javax.swing.JLabel();
        btCalculate = new javax.swing.JButton();
        btSetNStates = new javax.swing.JButton();
        jComboBoxFunction = new javax.swing.JComboBox<>();
        jLabelFunction = new javax.swing.JLabel();
        jLabeli = new javax.swing.JLabel();
        jLabelj = new javax.swing.JLabel();
        jLabeln = new javax.swing.JLabel();
        jSpinneri = new javax.swing.JSpinner();
        jSpinnern = new javax.swing.JSpinner();
        jSpinnerj = new javax.swing.JSpinner();
        jLabelVariables = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jTableEquations.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null}
            },
            new String [] {
                "s0"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        jTableEquations.setShowGrid(true);
        jScrollPane3.setViewportView(jTableEquations);

        jTableResult.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null}
            },
            new String [] {
                "s0"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        jTableResult.setShowGrid(true);
        jScrollPane4.setViewportView(jTableResult);

        jLabelTMatrix.setFont(new java.awt.Font("Lucida Grande", 0, 15)); // NOI18N
        jLabelTMatrix.setText("Insert the Transition Matrix and press (Tab or Enter):");

        jLabelResult.setFont(new java.awt.Font("Lucida Grande", 0, 15)); // NOI18N
        jLabelResult.setText("Result:");

        jLabelNStates.setFont(new java.awt.Font("SansSerif", 0, 15)); // NOI18N
        jLabelNStates.setText("Number of States:");

        btCalculate.setBackground(new java.awt.Color(255, 255, 255));
        btCalculate.setFont(new java.awt.Font("SansSerif", 1, 15)); // NOI18N
        btCalculate.setForeground(new java.awt.Color(0, 0, 255));
        btCalculate.setText("Calculate");
        btCalculate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btCalculateActionPerformed(evt);
            }
        });

        btSetNStates.setText("Set");
        btSetNStates.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btSetNStatesActionPerformed(evt);
            }
        });

        jComboBoxFunction.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Steady-State Probability of i", "Probability of reaching j from i after n iterations", "Mean First Time Passage at j from i" }));
        jComboBoxFunction.setSelectedIndex(1);
        jComboBoxFunction.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jComboBoxFunctionItemStateChanged(evt);
            }
        });

        jLabelFunction.setFont(new java.awt.Font("Lucida Grande", 0, 15)); // NOI18N
        jLabelFunction.setText("What do you want to calculate?");

        jLabeli.setFont(new java.awt.Font("Lucida Grande", 0, 15)); // NOI18N
        jLabeli.setText("i:");

        jLabelj.setFont(new java.awt.Font("Lucida Grande", 0, 15)); // NOI18N
        jLabelj.setText("j:");

        jLabeln.setFont(new java.awt.Font("Lucida Grande", 0, 15)); // NOI18N
        jLabeln.setText("n:");

        jLabelVariables.setFont(new java.awt.Font("Lucida Grande", 0, 15)); // NOI18N
        jLabelVariables.setText("i and j are states and n is the number of transitions");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabelFunction)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jComboBoxFunction, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabelResult, javax.swing.GroupLayout.PREFERRED_SIZE, 181, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabelTMatrix))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabeli)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jSpinneri, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(jLabelj)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jSpinnerj, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(jLabeln)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jSpinnern, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jLabelVariables)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(291, 291, 291)
                        .addComponent(btCalculate)))
                .addGap(0, 101, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane3)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabelNStates)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jSpinnerNStates, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(btSetNStates, javax.swing.GroupLayout.PREFERRED_SIZE, 61, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(203, 416, Short.MAX_VALUE))
                    .addComponent(jScrollPane4))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabelNStates)
                    .addComponent(jSpinnerNStates, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btSetNStates))
                .addGap(18, 18, 18)
                .addComponent(jLabelTMatrix)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 300, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabelFunction)
                    .addComponent(jComboBoxFunction, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabeli)
                    .addComponent(jLabelj)
                    .addComponent(jSpinneri, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jSpinnerj, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabeln)
                    .addComponent(jSpinnern, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabelVariables)
                .addGap(18, 18, 18)
                .addComponent(btCalculate, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabelResult)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
    /**
     * The probability calculation is done in this method
     */
    private void btCalculateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btCalculateActionPerformed
        int i, j;

        /**
         * Getting the user input
         */

        // The matrix of coefficients
        BigDecimal [][] tMatrix = new BigDecimal[nStates][nStates];

        //The vector of independent terms

        TableModel matrixTModel = jTableEquations.getModel();
        TableModel resultTModel = jTableResult.getModel();

        for(i=0; i<nStates; i++){
            for(j=0; j<nStates; j++){
                try{
                    tMatrix[i][j] = new BigDecimal((String)matrixTModel.getValueAt(i, j));
                }catch(NullPointerException e){
                    JOptionPane.showMessageDialog(null, "You either set the Number of Variables wrong or did not "
                        + "press (Tab or Enter) after you filled the Equations."
                        + "Please check your input and try again!");
                    break;
                }catch(NumberFormatException e){
                    JOptionPane.showMessageDialog(null, "You typed an invalid value in the Equations."
                        + "Please check your input and try again!");
                }
            }
        }

        /**
         * Uncomment the next part to test input
        */
        /*
        System.out.println("Matrix Size: "+matrixSize);
        System.out.println("Number or Iteractions: "+nIterations);
        System.out.println("\nTransition Matrix:");
        for(i=0; i<matrixSize; i++){
            for(j=0; j<matrixSize; j++){
                System.out.print(matrix[i][j]+", ");
            }
            System.out.println("");
        }
        */

        FirstTimePassage probCalc = new FirstTimePassage(tMatrix);
        BigDecimal[] result = new BigDecimal[nStates];
        String[] columnName;
        DefaultTableModel modelo2;

        switch(function){
            case 0:
                result = probCalc.steadStateProb();

                //Showing the result on the screen
                resultTModel = jTableResult.getModel();
                for(i=0; i<nStates; i++)
                    resultTModel.setValueAt(""+result[i], 0, i);
                break;

            case 1:
                i = (int)jSpinneri.getValue();
                j = (int)jSpinnerj.getValue();
                int n = (int)jSpinnern.getValue();

                //Set the result TableModel
                columnName = new String[1];
                columnName[0] = "(F"+i+j+")^"+n;
                modelo2 = new DefaultTableModel(columnName, 1);
                jTableResult.setModel(modelo2);

                //Showing the result on the screen
                resultTModel = jTableResult.getModel();
                BigDecimal Fij = probCalc.probOfReachJfromI(i, j, n);
                resultTModel.setValueAt(""+Fij, 0, 0);
                break;

            case 2:
                i = (int)jSpinneri.getValue();
                j = (int)jSpinnerj.getValue();

                //Set the result TableModel
                columnName = new String[1];
                columnName[0] = "U"+i+j+"";
                modelo2 = new DefaultTableModel(columnName, 1);
                jTableResult.setModel(modelo2);

                //Showing the result on the screen
                resultTModel = jTableResult.getModel();
                BigDecimal mFTP = probCalc.meanFirstTimePassage(i, j);
                resultTModel.setValueAt(""+mFTP, 0, 0);
                break;

        }



    }//GEN-LAST:event_btCalculateActionPerformed

    private void btSetNStatesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btSetNStatesActionPerformed
        //Get the number of Variables
        nStates = (int)jSpinnerNStates.getValue();
        if(nStates==0){
            JOptionPane.showMessageDialog(null, "The number of variables can not be zero!");
            return;
        }

        //Set the columnNames
        columnNames = new String[nStates];
        for(int i=0; i<nStates; i++){
            columnNames[i]="s"+i;
        }

        //Set the equations TableModel
        DefaultTableModel modelo1 = new DefaultTableModel(columnNames, nStates);
        jTableEquations.setModel(modelo1);
        //Set the result TableModel
        DefaultTableModel modelo2 = new DefaultTableModel(columnNames, 1);
        jTableResult.setModel(modelo2);
    }//GEN-LAST:event_btSetNStatesActionPerformed

    public void setResultsTable(){
        //Set the result TableModel
        DefaultTableModel modelo2 = new DefaultTableModel(columnNames, 1);
        jTableResult.setModel(modelo2);
    }
    private void jComboBoxFunctionItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jComboBoxFunctionItemStateChanged

        setResultsTable();
        function = jComboBoxFunction.getSelectedIndex();

        switch(function){
            case 0:
                jLabeli.setVisible(false);
                jSpinneri.setVisible(false);
                jLabelj.setVisible(false);
                jLabeln.setVisible(false);
                jSpinnerj.setVisible(false);
                jSpinnern.setVisible(false);
                jLabelVariables.setText("");
                break;

            case 1:
                jLabeli.setVisible(true);
                jSpinneri.setVisible(true);
                jLabelj.setVisible(true);
                jLabeln.setVisible(true);
                jSpinnerj.setVisible(true);
                jSpinnern.setVisible(true);
                jLabelVariables.setText("i and j are states and n is the number of transitions");
                break;

            case 2:
                jLabeli.setVisible(true);
                jSpinneri.setVisible(true);
                jLabelj.setVisible(true);
                jLabeln.setVisible(false);
                jSpinnerj.setVisible(true);
                jSpinnern.setVisible(false);
                jLabelVariables.setText("i and j are states");
                break;
        }
    }//GEN-LAST:event_jComboBoxFunctionItemStateChanged

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Metal".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MainScreen.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MainScreen.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MainScreen.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MainScreen.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MainScreen().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btCalculate;
    private javax.swing.JButton btSetNStates;
    private javax.swing.JComboBox<String> jComboBoxFunction;
    private javax.swing.JLabel jLabelFunction;
    private javax.swing.JLabel jLabelNStates;
    private javax.swing.JLabel jLabelResult;
    private javax.swing.JLabel jLabelTMatrix;
    private javax.swing.JLabel jLabelVariables;
    private javax.swing.JLabel jLabeli;
    private javax.swing.JLabel jLabelj;
    private javax.swing.JLabel jLabeln;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JSpinner jSpinnerNStates;
    private javax.swing.JSpinner jSpinneri;
    private javax.swing.JSpinner jSpinnerj;
    private javax.swing.JSpinner jSpinnern;
    private javax.swing.JTable jTableEquations;
    private javax.swing.JTable jTableResult;
    // End of variables declaration//GEN-END:variables
}
